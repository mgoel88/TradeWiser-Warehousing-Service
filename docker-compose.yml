services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${PGDATABASE}
      POSTGRES_USER: ${PGUSER}
      POSTGRES_PASSWORD: ${PGPASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${PGPORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PGUSER} -d ${PGDATABASE}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # TradeWiser Application
  app:
    build: .
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      database:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://${PGUSER}:${PGPASSWORD}@database:5432/${PGDATABASE}
      - PGHOST=database
      - PGPORT=5432
      - PGUSER=${PGUSER}
      - PGPASSWORD=${PGPASSWORD}
      - PGDATABASE=${PGDATABASE}
      - SESSION_SECRET=${SESSION_SECRET}
      - NODE_ENV=production
      - PORT=5000
    ports:
      - "5000:5000"
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/test"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Redis for Session Store (Optional)
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data: